*이번주~ 다음주
-오전 : js 개념 / 문법 + 간단한 예제
-오후 : html & css & js \\ jquery 실습 페이지
>피그마 : html + css + js
> 


~~~~~~~~~~~~~~
1. 웹디자이너 / 퍼블리셔 / 프론트엔드 경계
- html + css3 웹앱 페이지 레이아웃 설계 & 구성 + jQuery 플러그인
- 정적인 페이지를 제작 vs 인터랙티브한 페이지 제작
- JS 마스터 > JS 프레임 워크 마스터

2. JS => 비전공자 / 낯설고 ,생소
-송부해야하는 범위 => 굉장히 넓고, 깊음
- JS 목적 / 목표 => 중도포기
- 전세계 6위 => 20위권!!
- 웹브라우저에서만 사용 가능 => 가성비 떨어지는 언어
- 앱 / 게임 / 뮤직앱

3. Node 설치!
-배포 > firebase 배포
- Node 설치 불가

4. Google > Chrome > V8 검색엔진
- 키워드 입력 => 키워드
- 속도 / 효율 (*CPU / 사양)

5. V8 검색엔진 > JS 실행환경 > 외부로 꺼내자!
-Node > 서버 / 게임

6. 제이쿼리 사용목적 & 약식
-html & js 연동
- 3가지 방식 = html & css
- 인라인 스타일 시트
- 내부 스타일 시트
- 외부 스타일 시트 (*실무)

- 인라인 스크립트
- 내부 스크립트
- 외부 스크립트 (*실무)


*JS에서 사용할 수 있는 기능!!
- 생각하는 방식 비슷
- 어떤 상황에서 이런 기능!
- 웹 브라우저에서 탑재 = 내장

*js에서 사용할 수 있는 웹브라우저 함수
- alert( ) : 알림창 사용
- confirm( ) : 승인여부 사용
- prompt( ) : 사용자로 하여금 어떤 값을 받고자 할 때 사용

*웹브라우저 시스템 > sindow > 내장 함수
> CS = Computer Science = 컴퓨터공학
> 유투브 / 책 => 가볍게 컴퓨터 운영체제 공부
> 정렬 => margin / float / flex / grid / transform
> 배열 => 반복 => while / for / for in / for of
(*자료구조 / 알고리즘)
(*전공자 vs 비전공자)

* 지금까지 내가 작성해왔던 모든 html 문서들은 window > document 공간에 저장되어 왔음!

> document의 내장 함수 => write( ) : 웹브라우저 안에 문서를 출력하고자 할 때
> document.wirte( )
> document. object modedl =DOM
>console.log( )

*window = 객체
Broweser Object Moderl = BOM 을 학습

-------------------------------------------------------
모든 프로그래밍 언어!! => 기초 & 기본 토대 = 변수
변수 => 변할 수 있는 수(*값) => 값을 담아놓을 때 => 바구니

"선언= 생성" / / 할당

// 바라는 변수는 실무에서는 거의 사용하지 않은 키워드
// var = variable = 변수 = 유연함! = flexable
// 프로그래밍 언어 : 지나치게 유연 = 리스크가 많다
// 엄격할수록 

// 웹 & 앱 작업 : 혼자서 독립작업x || 여러사람이 협업

**const : 재선언 & 재할당 원천적으로 불가능한 변수를 선언하고자 할 때

const 키워드로 변수를 선언하게 되면 , const 안에 담긴 값을 상수라고 부름(*고정값)

변수 <-> 상수
> var / const / let


***재선언&재할당
// let : 원친적으로 재선언은 불가하지만, 재할당은 가능~


터미널 =>
node ./script.js

** 변수
*자료형(태/식)

*js 변수 할당 가능한 자료형
1) 숫자형 = number
2) 문자형 = string
3) 논리형 (*참/거짓) = true / false / undefined = 아직 정의가 되지 않은 값 / null =유효하지 않은 값
4) 객체 = 여러개의 연관성이 있는 값을 하나로 묶어놓은  집합 / { }
5) 배열 = / [ ]
6) 심벌
7) 함수

*사용자의 선택 => 페이지 혹은 결과값을 상이하게 출력
*js : 문자 + 숫자 => 무조건 결과값 문자!

*typeof : 변수안에 담긴 값의 자료형태를 확인시켜주는 키워드

*템플릿리터럴 : 변수 + 문자 혹은 숫자 등의 값을 출력하고자 할 때, 중간에 연산자"+"를 굳이 넣지 않더라도 정상적으로 값을 출력시켜줄 수 있는 문법

*백틱(`)

// 객체는 {key: value} => 프로퍼티 (property)

나를 소개하는 웹페이지
**목적 및 취지
- 내가 지금까지 했던 작업불 나는 뭘 했는지

이 작업물을 완성시키기 위한 전반적인 과정
- 피그마 : 와이어프레이밍 / 스타일가이드
- 작업물 : 어떤 언어를 썼는지 (html / css / scss / js )
- 순탄하지 못햇던 작업물 1~2 : 자기경험


                  <a class="view-project" href="./project-detail-01.html" data-featherlight="iframe">View Project
                    <i class="fa fa-long-arrow-right"></i>
                  </a>











