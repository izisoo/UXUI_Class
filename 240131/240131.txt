1. 행 = row = 가로
2. 열 = column = 세로

>grid /
*사용하는 단어 비슷한게 많음
justify / align - content / items
>

*flex => 단일차원 행.열 레이아웃

*grid => 다차원의 행.열 레이아웃

----------------------

float vs flex&grid
=> 반응형

grid-column / grid-row 축약

1) grid로 레이아웃을 정렬하고자 할 때, 현재 보이는 화면을 기준으로 행 & 열을 재정립해나가면서 최종적인 UI 화면을 완성

2) 미리 완성된 결과물을 미리 figma를 통해서 행 & 열을 정의한 후 grid 문법을 사용하는 것


***order 값을 주지 않은 애들은 영향xxx

*웹퍼블리셔 취업 =>
1. 포트폴리오 홈페이지
2. 포트폴리오 작업물
 - 수업시간에 진행한 실전 예제들 30개(*커스터마이징 / 메뉴 / 네비 / 푸터 / 기능 특징 구현)
 - flex만으로 완성된 웹페이지(*메인) 1~2개
 - grid만으로 완성된 웹페이지(*메인) 1~2개
>

display : gird;
grid-template-columns
grid-template-rows
grid-template-areas

*grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));


/*css를 사용할 때, 변수!!설정가능!!
/* 변수 = 변할 수 있는 수 vs 상수 = 고정되어있는 수
/* wire frame => 메뉴얼 (*스타일가이드)
/* main color => / font-size => */
/* 변수 = variable
/* var


*html5 & css3
-css => 비약적인 발전
> transition / transform / animation

W3C : 많은것들이 바뀜
=> 기존 사용되고 있던 문법
=> 영구적으로 보존

SASS => SCSS 네이밍 변경(*안정화)

Why SCSS
>CSS가 갖지 못하는 기능
>프로그래밍 코드를 벤치마킹!

SCSS => 확장자가 .scss

CS영역
=> 웹 브라우저 : html,css,js 만 읽을 수 있음
=> FE : TS

컴파일링을 한다~
=Compiling => 어떤 요소를 번역해주는 역할
=Complier => 컴파일러
> SCSS => CSS

* p > 내부에 블록태그 x
* SCSS > Nesting 기능
> 중첩기능

*SCSS 만으로 구성된 프로젝트
> 개인프로젝트
> SCSS 작업 / 
















