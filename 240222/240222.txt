** 이벤트 /
=> 정적 : 동적 *이벤트
=> 사용자가 웹.앱 액션 행위를 하는 것 => 무엇인가를 실행시켜준는 것

=> click / load / submit

Refactoring : Cleancode => 특정 요소 과한 기능이 포함되었을 경우, 해당 요소 버그 발생시, 디버깅을 하기가 매우 비효율적인 상황이 발생 => 미연방지하기 위해서 각각의 독립적인 기능을 따로 분리시켜놓는 작업 => 향후 코드를 재가공 & 

1. 이벤트 종류
- load : 문서 로딩이 종료되었을 때
- scroll : 문서 화면이 스크롤 되었을 때
- error : 문서가 정확하게 로딩되지 않았을 때
- resize : 문서 화면의 크기가 바뀌었을 때
- about : 문서가 완전히 로딩되기 전에 불러오기를 멈추었을때
- unload : 문서를 벗어나게 되었을때

2. 마우스 이벤트 종류
- click : 사용자가 html 요소를 클릭했을 때
- dbclick : 사용자가 html 요소를 더블클릭 했을 때
- mousedown  : 사용자가 특정 요소에서 마우스 버튼을 눌렀을 때
- mousemove : 사용자가 특정 요소에서 마우스 포인터를 움직일 때
- mouseover : 마우스 포인터를 특정 요소 위로 올릴때
- mouseout : 마우스 포인터가 특정 요소를 벗어날 때
- mouseup : 특정 요소 위에 올려놓은 마우스 버튼에서 손을 뗄 때

3. 키보드 이벤트 종류
- keydown : 키를 누르는 순간
- keyup : 키에서 손을 땔 때
- keypress(*점차 사용하지 않는 추세) :  키를 눌렀을 때

4. 폼 이벤트 종류
- submit : [submit]이라는 속성값을 갖고있는 버튼을 클릭했을 때
- change : 목록이나 체크 등의 상태변화가 발생했을 때 (*select > option 변경)
- focus : 폼 요소에 마우스를 포커스 했을 때
- blur : 폼 요소에 포커를 해제했을 때
- reset : 폼안에 있는 내용이 리셋되었을 때

5. event 객체 프로퍼티 & 메서드
- charCode : keypress 이벤트가 발생했을 때, 어떤 키를 눌렀는지 "유니코드"값으로 반환
- clientX : 이벤트가 발생한 가로 위치값 반환
- clientY : 이벤트가 발생한 세로 위치값 반환
- pageX : 현재 작업하고 있는 HTML 전체 문서를 기준으로 이벤트가 발생한 가로 위치값 반환
- pageY :현재 작업하고 있는 HTML 전체 문서를 기준으로 이벤트가 발생한 세로 위치값 반환
- screenX : 현재 화면을 기준으로 이벤트가 발생한 가로 위치값 반환
- screenY : 현재 화면을 기준으로 이벤트가 발생한 세로 위치값 반환
- target : 이벤트가 발생한 대상
- altKey : 이벤트가 발생했을 때 alt를 클릭하고 있었는지의 여부를 확인하고 true/false 값으로 반환
- shiftKey : 이벤트가 발생했을 때 shift를 클릭하고 있었는지의 여부를 확인하고 true/false 값으로 반환
==
- preventDefault : 기본적으로 탑재되어있는 기능을 무력화 하거나 취소시키고자 할 때 사용



============================================

8. 이벤트 종류
> 문서 로딩 이벤트
> 마우스 이벤트 
> 키보드 이벤트
> 폼 이벤트

- 이벤트 처리
> 인라인 스크립트 : html 문서에 직접 이벤트 정의
> 외부 스크립트 : 이벤트 핸들러
> 외부 스크립트 : 이벤트 리스너

- 이벤트 전파
> 이벤트 버블링
> 이벤트 캡처링 ~ 이해안감~









































