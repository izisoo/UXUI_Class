다른곳에서 git-hub에 데이터를 올려야 하는 상황이라면?

1) 기존에 내가 git-hub에 올려놨던 데이터를 그대로 다 가지고 있는 상황이라면 : git push origin (+ master)

2) 기존 데이터를 백업해놓은 것이 없다면, 기존에 git-hub에 올라가 있는 데이터를 먼저 다운받아야 함
모두 내려받은 후에 그동안 사용했던 컴퓨터가 아닌 새로운 공간에서 다운을 받고자 하면, 에러메세지 발생

<나의 로컬 컴퓨터의 git과 git-hub를 연동>

1. 이미 공용컴퓨터에 누군가가 git을 사용했던 이력이 존재할 수 있음 -> 기존 세팅되어있던 git 정보를 reset하고 가자
2. 내 컴퓨터 > 좌측 하단 검색도구 > git bash > 관리자 권한으로 실행
git config --system --unset credential.helper

3. vs code
> git bash > name & email 세팅
> git config --global user.name izisoo
> git config --global user.email jisulee74@gmail.com
> 내 git-hub 정보가 로컬컴퓨터에 정상적으로 세팅되었는가를 확인하는 절차 :
git config --list

4. 내 컴퓨터에 git 이라는 공간을 생성
> git init        ***이건 한번만 하기 아니면 리셋됨


5. 나의 git과 나의 레파지토리 주소를 연동하는 방법
> git remote add origin https://github.com/izisoo/UXUI_Class.git

6. 지금까지 내가 작업해온 데이터를 git 담는 방법
> git add .

7. 내 루트 폴더에 있는 데이터가 정상적으로 담겨있는지 확인하는 방법
> git status

8. git hub에 업로드하고자 하는 나의 데이터에 라벨을 붙이는 작업
(*커밋 메세지를 작성)
> git commit -m "240111"

9. 웹 상에 있는 나의 git hub 레파지토리로 데이터를 커밋하는 방법
> git push origin master

git pull origin master --allow-unrelated-histories
-> 맨처음에만

연결이 된 상태라면
git pull origin master

1. 폴더를 생성한다

2. 해당 폴더를 root 폴더로 잡고 vs code를 연다

3. vs code > 터미널을 연다

4. 터미널 > git bash를 선택한다

5. 해당 폴더에 git을 초기화한다 (*최초에만)
- git init
6. 최초에만 아래 명령어를 입력한다
git pull origin master --allow-unrelated-histories

7. 다음부터는 아래 명령어를 입력한다
git pull origin master

(단, 예외가 있다
> 레파지토리안에 브랜치명이 master가 아닌 main인 경우
> 내 로컬컴퓨터의 브랜치명도 main으로 바꿔줘야 한다.
> git branch -m master main
