1. html5
-web 구성하는데 가장 기본이 되는 언어
-html5 문법 / 실전에 사용x

2. VS code
- emmet 기능 : 단축기능!!
(직접 코드를 하나에서 열까지 타이핑 하지 않더라도 단축키로 사용 가능)
1) h${heading $}*6
	- $ -> 숫자?를 미정함

-tag -> 여는태그&닫는 태그
- html 태그를 다 사용하진 않음 실무자들도 잘 모름(약 20개 정도)
-이해 먼저 -> 이해한것을 기반으로 외워서 사용


alt+L+O -> 뷰포트 보여주기

*tag
- 홀태그(single tag) / 쌍태그(multi tag)

*속성 = id (property)
*value_속성값

*주석 <!--				=> 그룹명 짓는것 같음
- 명시성 = 얼만큼 직관적으로 코드를 작성햇는가
- 한글x 영어로 달기

*Clean Code = html5 = code를 보고있는데, 글을 읽고있는 느낌이 들어야함
- 논리정연하게 코드를 작성

**Ctrl + shift + j
**alt shit 아래화살표 : 아래로 복제


*반드시 꼭 필수적으로 알아야하는 tag

1) text tag
-h(n) : n 숫자 = 1~6
-어떤 문서를 작성할 때 대표 타이틀을 지칭하고자 할 때
-b : bold -> 텍스트를 두껍게 하고 싶을 때 사용하는 태그
-mark -> 특정 텍스트를 돋보이게 하기 위한 태그

2) p : Paragraph = 단락
- Lorem (*특별한 의미를 부여하지 않은 문자를 삽입하는 경우 = 더미 문자열 = dummy text)
- br : break (*문장 단락 줄 바꿈이 필요한 경우)
- hr : horizontal ruler (*단락간 선을 긋고 구분을 지어주고 싶을 때 활용)
- a : anchor (*특정 텍스트 및 이미지를 클릭했을 때, 해당 페이지로 이동하게 만들어주고 싶을 때 사용)
	1. 첫번째 기능 : 외부 페이지로 이동하고 싶은 경우
	2. 두번째 기능 : 내부 페이지에서 내부페이지로 이동하고 싶은 경우
		       (*top으로 이동 기능 구현)
	3. a태그를 사용할 때, 특정 위치로 이동시키고 싶다면, 반드시 id값을 활용해야하는데, 그때 ID 값 앞에 	    붙이는 수식어 "#"
	4. 절대로 하나의 프로젝트 안에서는 동일한 이름의 ID 속성값은 사용하지 않는다 절대롱~

*landing page = 랜딩 페이지 = 도착해야하는 페이지

3) List tag (목록 태그)
-ul : unoder list
-ol : order list
-li : list
*order : 정렬된
*중첩된 목록태그 사용의 경우

4) table tag(테이블태그)
-table : 테이블 태그를 작성하기 위해서 가장 바깥 영역에 입력하는 태그
-tr : table row 약자 : 테이블의 행을 정의할때 사용하는 태그
-th: table header 약자 : 각 행 혹은 각 열의 대표성을 띄고있는 셀을 지칭하고자 할 때_(볼드)
-td : table data : 각 행 혹은 각 열의 일반 보통의 셀을 지칭할 때_(노말)
-thead / tbody / tfoot : 각 table의 영역을 구분짓고 싶을 때 사용하는 태그
-caption : table 태그를 사용할 때 해당 테이블의 제목을 입력하고자 할 때 사용(*수평정렬)
-figure : figcaption을 사용하기 위해서 사용하는 태그
-figcaption : table 태그를 사용할 때, 테이블의 제목을 입력할 수 있음(*좌측정렬)
-colgroup : 열을 그룹핑하고자 할 때 사용하는 태그
-col : 실제 colgroup안에 있는 열을 지칭하고자 할 때
-colspan : 열을 병합하고 싶을 때
-rowspan: 행을 병합하고 싶을 때

5) 이미지 & 비디오 & 오디오 태그
-img : 
> src : 이미지 경로를 가져오는 속성
> alt : 이미지에 대한 정보를 정의할 수 있는 속성
> width : 이미지의 너비(*가로) 길이를 조정할 수 있는 속성
> height : 이미지의 높이(*세로) 길이를 조정할 수 있는 특성

-audio&video
>src : 오디오 소스 경로를 가져오는 속성
> controls : 오디오 재생 도구를 출력 시켜주는 속성
>loop : 오디오 반복 여부를 컨트롤해주는 속성
>autoplay : 오디오 자동재생을 컨트롤해주는 속성
>width / height

-img map : 

-map태그 : name 속성 = img usemap 속성 값

*웹좌표계 vs 데카르트 좌표계


*HTML5에 적용된 문법
(시멘틱 태그 = semantic tag = 의미를 부여하는 태그)

<thead>
 tr>th{table head}*3

<tbody>
 (tr>td{table data}*3)*3

*row : 행 / column : 열

*style 적용에 대한 우선 순위!!
1. thead / tbody / tfoot
2. colgroup -> col


인라인 스타일 시트 -> HTML 문서안에 직접 CSS 스타일 적용한 것을 의미(*실무에서는 이렇게 작성X)

내부 스타일 시트

외부 스타일 시트

nth-child : 

  <link rel="stylesheet" href="./style.css"

-----------------------
표 만들기
table>tbody>(tr_행>td_열*4)*3
ㅅㅂ 

------------------------

****************************ㅅㅂ*****************에밋
    <table>
      <tbody>
        (tr>td*3)*4
      </tbody>
******************하..
  table>tbody>(colgroup>col*6)+caption{Table 태그 실습}+(tr>td*6)*10
----------------------------

alt 클릭 -> 다중선택


-------------------------

git & git-hub

git :
1) 현재 작업중인 데이터의 버전관리를 도와주는 프로그램
2) 내가 현재 작업하고 있는 컴퓨터 안에 설치를 하는 프로그램
3) 현재 로컬 컴퓨터에 설치된 작업관리 프로그램

git-hub :
1) 로컬 컴퓨터에서 작업한 데이터를 클라우드 공간으로 호스팅 하게 도와주는 장소


[나의 로컬 컴퓨터에서 준비해야하는 1단계]

git을 사용하려면 반드시 설치해야하는 프로그램
-git bash

2.vs code > 터미널(ctrl +~) > git bash 모드 변경

<웹에서 깃허브 계정 생성>

깃허브에서 내가 데이터를 저장할 공간을 생성
(*공간 = 레파지토리 = repository)

<나의 로컬 컴퓨터의 git과 git-hub를 연동>

1. 이미 공용컴퓨터에 누군가가 git을 사용했던 이력이 존재할 수 있음 -> 기존 세팅되어있던 git 정보를 reset하고 가자
2. 내 컴퓨터 > 좌측 하단 검색도구 > git bash > 관리자 권한으로 실행
git config --system --unset credential.helper

3. vs code
> git bash > name & email 세팅
> git config --global user.name izisoo
> git config --global user.email jisulee74@gmail.com
> 내 git-hub 정보가 로컬컴퓨터에 정상적으로 세팅되었는가를 확인하는 절차 :
git config --list

4. 내 컴퓨터에 git 이라는 공간을 생성
> git init        ***이건 한번만 하기 아니면 리셋됨











